{"version":3,"sources":["components/Posts.js","components/Login.js","components/Navbar.js","components/Register.js","components/Home.js","components/Account.js","components/AddPost.js","components/PostDetail.js","components/EditPost.js","components/App.js","index.js"],"names":["Posts","postResults","token","posts","useState","searchTerm","setSearchTerm","filteredPosts","filter","post","text","author","username","toLowerCase","includes","description","location","price","title","postMatches","postsToDisplay","length","className","htmlFor","required","type","name","value","onChange","event","target","to","map","_id","Login","setToken","setUsername","password","setPassword","checkLogin","setCheckLogin","history","useHistory","handleLogin","a","preventDefault","fetch","method","headers","body","JSON","stringify","user","response","json","info","error","message","data","localStorage","setItem","push","id","onSubmit","Navbar","setUser","onClick","removeItem","Register","confirmPassword","setConfirmPassword","setError","handleRegister","Home","console","log","Account","existingPosts","active","sentMessages","messages","fromUser","recievedMessages","src","content","AddPost","setPostResults","setTitle","setDescription","setPrice","setLocation","fetchPosts","handleSubmit","PostDetail","useParams","setMessage","messageUser","setMessageUser","individualPost","handleClick","handleSubmitUser","isAuthor","willDeliver","EditPost","useEffect","setTemplate","App","Authorization","fetchUser","isToken","getItem","success","exact","path","app","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.668cf91b.chunk.js","sourcesContent":["import {React, useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Posts = ({postResults, token}) => {\r\n    if(!postResults.posts){\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    function postMatches(post, text) {  \r\n        if (post.author.username.toLowerCase().includes(text) || post.description.toLowerCase().includes(text) ||\r\n            (post.description.toLowerCase().includes(text) || post.location.toLowerCase().includes(text) || \r\n            post.price.toLowerCase().includes(text) || post.title.toLowerCase().includes(text))\r\n        ){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const filteredPosts = postResults.posts.filter(post => postMatches(post, searchTerm));\r\n    const postsToDisplay = searchTerm.length ? filteredPosts : postResults.posts;\r\n    \r\n    return (\r\n        <div className=\"posts-page\">\r\n            <div className=\"header\">\r\n                <h2>Posts</h2>\r\n                <form className=\"addPost-form\">\r\n                    <label htmlFor='title'>Title:</label>\r\n                    <input required type='text' name='searchTerm' value={searchTerm} \r\n                        onChange={(event) => setSearchTerm(event.target.value)}/>\r\n                </form>\r\n                {token  ? (\r\n                    <button>\r\n                        <Link to=\"/AddPost\">Add Post</Link>\r\n                    </button>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </div>  \r\n            {\r\n                postResults.posts ? (\r\n                    postsToDisplay.map(post => {\r\n                        return (\r\n                            <div key={post._id} className=\"public-posts\">\r\n                                <h1>{post.title}</h1>\r\n                                <p>{post.description}</p>\r\n                                <h4>{post.price}</h4>\r\n                                <h3>{post.author.username}</h3>\r\n                                <h4>{post.location}</h4>\r\n                                {token ? (\r\n                                    <button>\r\n                                        <Link to={`/PostDetail/${post._id}`}>Details</Link>   \r\n                                    </button>\r\n                                ) : (\r\n                                    null\r\n                                )}\r\n                            </div>\r\n\r\n                        )\r\n                    })\r\n                ) : (\r\n                    null\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n        \r\n}\r\n\r\nexport default Posts;","import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Link, useHistory } from 'react-router-dom';\r\n\r\nconst Login = ({setToken}) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [checkLogin, setCheckLogin] = useState('')\r\n\r\n    const history = useHistory();\r\n  \r\n    const handleChange = (event) => {\r\n      setUsername(event.target.value);\r\n    }\r\n\r\n    const handleLogin = async(event) => {\r\n        event.preventDefault();\r\n        setCheckLogin(\"\");\r\n\r\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/users/login', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                user: {\r\n                    username,\r\n                    password,\r\n                },\r\n            }),\r\n        });\r\n        const info = await response.json();\r\n\r\n        if(info.error) {\r\n            return setCheckLogin(info.error.message)\r\n        }\r\n\r\n        setToken(info.data.token);\r\n        localStorage.setItem(\"token\", info.data.token);\r\n\r\n        history.push(\"/\");\r\n    }\r\n  \r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      handleLogin(event);\r\n      setUsername('');\r\n      setPassword('');\r\n    }\r\n  \r\n    return (\r\n      <div id='container'>\r\n        <div id='login-navbar'>\r\n          Login:\r\n        </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <label htmlFor='username'>Username:</label>\r\n              <input required type='text' name='username' value={username} onChange={handleChange} />\r\n              <label htmlFor='password'>Password:</label>\r\n              <input required type='password' name='password' value={password} onChange={(event) => setPassword(event.target.value)} />\r\n              <button type='submit'>Submit</button>\r\n            </form>\r\n            <p>Haven't created an account yet?</p>\r\n            {\r\n                <>\r\n                <Link to=\"/Register\">Register Here</Link>\r\n                </>\r\n            }\r\n            <p>{checkLogin}</p>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Login; ","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({token, setToken, setUser, user}) => {\r\n\r\n    return (\r\n        <>{token ? (\r\n            <div id=\"main-navbar\">\r\n                <Link id=\"icon\" to=\"/\"><i className=\"material-icons\">home</i></Link> \r\n                <Link id=\"icon\" to=\"/Posts\"><i className=\"material-icons\">collections_bookmark</i></Link>\r\n                <Link id=\"icon\" to=\"/Account\">\r\n                    <i className=\"material-icons\">account_circle</i>\r\n                </Link>\r\n                <Link\r\n                    id=\"icon\"\r\n                    to=\"/\"\r\n                    onClick={() => {\r\n                        setToken(\"\");\r\n                        setUser({});\r\n                        localStorage.removeItem(\"token\")\r\n                    }}\r\n                ><i className=\"material-icons\">logout</i></Link>\r\n            </div>\r\n            ) : (\r\n            <div id=\"main-navbar\">\r\n                <Link id=\"icon\" to=\"/\"><i className=\"material-icons\">home</i></Link> \r\n                <Link id=\"icon\" to=\"/Posts\"><i className=\"material-icons\">collections_bookmark</i></Link> \r\n                <Link id=\"icon\" to=\"/Login\"><i className=\"material-icons\">login</i></Link>\r\n            </div>\r\n        )}</>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Link, useHistory } from 'react-router-dom';\r\n\r\nconst Register = ({setToken}) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('')\r\n\r\n    const history = useHistory();\r\n  \r\n    const handleChange = (event) => {\r\n      setUsername(event.target.value);\r\n    }\r\n\r\n    const  handleRegister = async(event) => {\r\n        event.preventDefault();\r\n        setError(\"\");\r\n\r\n        if(password !== confirmPassword) {\r\n            setError(\"Your password do not match!\")\r\n            return;\r\n        }\r\n\r\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/users/register', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                user: {\r\n                    username,\r\n                    password,\r\n                },\r\n            }),\r\n        });\r\n        const info = await response.json();\r\n\r\n        if(info.error) {\r\n            return setError(info.error.message)\r\n        }\r\n\r\n        setToken(info.data.token);\r\n        localStorage.setItem(\"token\", info.data.token);\r\n\r\n        history.push(\"/\");\r\n    }\r\n  \r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      handleRegister(event);\r\n      setUsername('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n    }\r\n  \r\n    return (\r\n      <div id='container'>\r\n        <div id='login-navbar'>\r\n          Register:\r\n        </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <label htmlFor='username'>Username:</label>\r\n              <input required type='text' name='username' value={username} onChange={handleChange} />\r\n              <label htmlFor='password'>Password:</label>\r\n              <input required type='password' name='password' value={password} onChange={(event) => setPassword(event.target.value)} />\r\n              <label htmlFor='confirm_password'>Confirm Password:</label>\r\n              <input required type='password' name='confirm_password' value={confirmPassword} onChange={(event) => setConfirmPassword(event.target.value)} />\r\n              <button type='submit'>Submit</button>\r\n            </form>\r\n            <p>{error}</p>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Register; ","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\n\r\nconst Home = ({user}) => {\r\n    console.log(user);\r\n\r\n    return (\r\n        <div className='home-page'>\r\n            <h1 id=\"home-title\">Welcome To Stanger's Things {user ? user.username : null}</h1>\r\n            <h1 id=\"logo\">🍊</h1>\r\n            <h2>Our Website is just like craigslist but better.</h2>\r\n            <h2>Please enjoy, we are very happy for your interest!</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\n\r\nconst Account = ({user}) => {\r\n    if(!user){\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n    \r\n    const existingPosts = user.posts.filter(\r\n        (post) => post.active == true\r\n    );\r\n\r\n    const sentMessages = user.messages.filter(\r\n        (message) => message.fromUser.username === user.username\r\n    );\r\n\r\n    const recievedMessages = user.messages.filter(\r\n        (message) => message.fromUser.username !== user.username\r\n    );\r\n    \r\n    return(\r\n            <div className=\"account-page\">\r\n                <header className=\"account-header\">\r\n                    <div className=\"account-functions\">\r\n                        <img id=\"profile-pic\" src=\"https://img.icons8.com/bubbles/100/000000/test-account.png\"/>\r\n                        <h1>{user.username}</h1>\r\n                    </div>\r\n                    <div>\r\n                        <h1 id=\"logo-account\">🍊</h1>\r\n                        <h1>Stanger's Things</h1>\r\n                    </div>\r\n                </header>\r\n                <main className=\"account-body\">\r\n                    <h1 id=\"user-post-title\">Your Post's!!</h1>\r\n                    <>\r\n                        {user ? (\r\n                            existingPosts.map(post => {\r\n                                return (\r\n                                    <div key={post._id} className=\"user-posts\">\r\n                                        <Link to={`/PostDetail/${post._id}`}><h1>{post.title}</h1></Link>\r\n                                        <p>{post.description}</p>\r\n                                        <h4>{post.price}</h4>\r\n                                        <h3>{post.author.username}</h3>\r\n                                        <h4>{post.location}</h4>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        ) : (\r\n                            <h2>No User Posts Yet!</h2>\r\n                        )}\r\n                    </>\r\n                    <h1 id=\"user-post-title\">Your Messages!</h1>\r\n                    <>\r\n                        <h2>Recived Messages:</h2>\r\n                        {recievedMessages[0] ? (\r\n                            recievedMessages.map(message => {\r\n                                return (\r\n                                    <div key={message._id} className=\"user-messages\">\r\n                                        <Link to={`/PostDetail/${message.post}`}><h1>{message.post.title}</h1></Link>\r\n                                        <h3>{message.content}</h3>\r\n                                        <h4>{message.fromUser.username}</h4>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        ) : (\r\n                            <h2>No Messages Yet!</h2>\r\n                        )}\r\n                    </>\r\n                    <>\r\n                        <h2>Sent Messages:</h2>\r\n                        {sentMessages[0] ? (\r\n                            sentMessages.map(message => {\r\n                                return (\r\n                                    <div key={message._id} className=\"user-messages\">\r\n                                        <Link to={`/PostDetail/${message.post}`}><h1>{message.post.title}</h1></Link>\r\n                                        <h3>{message.content}</h3>\r\n                                        <h4>{message.fromUser.username}</h4>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        ) : (\r\n                            <h2>No Sent Messages Yet!</h2>\r\n                        )}\r\n                    </>\r\n                </main>\r\n                <footer className=\"account-footer\">\r\n                    <div id=\"creator-name\">\r\n                        <p>Concilla.LLC</p>\r\n                    </div>\r\n                    <div id=\"social-links\">\r\n                        <p>Insta</p>\r\n                        <p>Facebook</p>\r\n                        <p>Social</p>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Account;","import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Link, useHistory } from 'react-router-dom';\r\n\r\nconst AddPost = ({token, setPostResults}) => {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    async function fetchPosts() {\r\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/posts');\r\n        const info = await response.json();\r\n        setPostResults(info.data);\r\n    }\r\n\r\n    const handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n        setError(\"\");\r\n\r\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/posts', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                post: {\r\n                    title,\r\n                    description,\r\n                    price,\r\n                    location\r\n                }\r\n            })\r\n        });\r\n        const info = await response.json();\r\n\r\n        if(info.error) {\r\n            return setError(info.error.message);\r\n        }\r\n\r\n        fetchPosts();\r\n        \r\n        history.push(\"/Posts\");\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id='addPost-container'>\r\n            <div id='addPost-title'>\r\n                <h2>Please Fill Out the Information Below to Create a New Post!</h2>\r\n            </div>\r\n            <form className=\"addPost-form\" onSubmit={handleSubmit}>\r\n              <label htmlFor='title'>Title:</label>\r\n              <input required type='text' name='title' value={title} \r\n                onChange={(event) => setTitle(event.target.value)}/>\r\n              <label htmlFor='description'>Description:</label>\r\n              <input required type='description' name='description' value={description} \r\n                onChange={(event) => setDescription(event.target.value)}/>\r\n              <label htmlFor='price'>Price:</label>\r\n              <input required type='price' name='price' value={price} \r\n                onChange={(event) => setPrice(event.target.value)}/>\r\n              <label htmlFor='location'>Location:</label>\r\n              <input required type='location' name='location' value={location} \r\n                onChange={(event) => setLocation(event.target.value)}/>\r\n              <button type='submit'>Submit</button>\r\n            </form>\r\n            <p>{error}</p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AddPost;","import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\n\r\nconst PostDetail = ({postResults, token, user, setPostResults}) => {  \r\n    const {id} = useParams()\r\n    const [message, setMessage] = useState('');\r\n    const [messageUser, setMessageUser] = useState('');\r\n    const [error, setError] = useState('');\r\n    const history = useHistory();\r\n\r\n    if (!postResults.posts) {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n\r\n    const individualPost = postResults.posts.filter(\r\n        (post) => post._id === id\r\n    );\r\n\r\n    async function fetchPosts() {\r\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/posts');\r\n        const info = await response.json();\r\n        setPostResults(info.data);\r\n    }\r\n\r\n    const handleClick = async() => {\r\n        setError(\"\");\r\n\r\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/posts/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        });\r\n        const info = await response.json();\r\n\r\n        if(info.error) {\r\n            return setError(info.error.message);\r\n        }\r\n\r\n        fetchPosts();\r\n        history.push(\"/Posts\");\r\n\r\n    }\r\n\r\n    const handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n        setError(\"\");\r\n        setMessage('');\r\n\r\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/posts/${id}/messages`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                message: {\r\n                    content: message\r\n                }\r\n            })\r\n        });\r\n        const info = await response.json();\r\n\r\n        if(info.error) {\r\n            return setError(info.error.message);\r\n        }\r\n\r\n        fetchPosts();\r\n        setMessage('');\r\n\r\n        history.push(\"/Posts\");\r\n\r\n    }\r\n\r\n    const handleSubmitUser = async(event) => {\r\n        event.preventDefault();\r\n        setError(\"\");\r\n        console.log(individualPost);\r\n\r\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/posts/${id}/messages`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                message: {\r\n                    content: messageUser\r\n                }\r\n            })\r\n        });\r\n        const info = await response.json();\r\n\r\n        if(info.error) {\r\n            return setError(info.error.message);\r\n        }\r\n\r\n        console.log(error);\r\n        fetchPosts();\r\n\r\n        history.push(\"/Posts\");\r\n    }\r\n\r\n    return (\r\n        <div className='post-detail'>\r\n            {individualPost[0].isAuthor ? (\r\n                <>\r\n                <div className='public-post'>\r\n                    <h1>{individualPost[0].title}</h1>\r\n                    <h3>Description: {individualPost[0].description}</h3>\r\n                    <h3>Price: {individualPost[0].price}</h3>\r\n                    <h3>Location: {individualPost[0].location}</h3>\r\n                    <h3>Will Deliver: {individualPost[0].willDeliver}</h3>\r\n                </div>\r\n                <div>\r\n                    <button>\r\n                        <Link to={`/EditPost/${individualPost[0]._id}`}>Edit</Link>\r\n                    </button>\r\n                    <button onClick={handleClick}>Delete</button>\r\n                </div>\r\n                <div>\r\n                    <h2 id=\"message-title\">Messages:</h2>\r\n                    <div>\r\n                        {individualPost[0].messages ? (\r\n                        individualPost[0].messages.map(message => {\r\n                                return (\r\n                                    <div key={message._id} id=\"message-box\">\r\n                                        <div>\r\n                                            <h2 id=\"message-title\">Message:</h2>\r\n                                            <h3>{message.content}</h3>\r\n                                        </div>\r\n                                        <div>\r\n                                            <h3>From: {message.fromUser.username}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <h2>No Messages Yet!</h2>\r\n                        )}\r\n\r\n                        {individualPost[0].messages ? (\r\n                            <form className=\"addPost-form\" onSubmit={handleSubmitUser}>\r\n                                <label htmlFor='title'>Respond:</label>\r\n                                <input required type='text' name='message' value={messageUser} \r\n                                    onChange={(event) => setMessageUser(event.target.value)}/>\r\n                                <button type='submit'>Submit</button>\r\n                            </form>\r\n                        ) : (\r\n                            null\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <div className='public-post'>\r\n                    <h1>{individualPost[0].title}</h1>\r\n                    <h3>Description: {individualPost[0].description}</h3>\r\n                    <h3>Price: {individualPost[0].price}</h3>\r\n                    <h3>Location: {individualPost[0].location}</h3>\r\n                    <h3>Will Deliver: {individualPost[0].willDeliver}</h3>\r\n                </div>\r\n                <div>\r\n                    <h2>Creator: {individualPost[0].author.username}</h2>\r\n                    <form className=\"addPost-form\" onSubmit={handleSubmit}>\r\n                        <label htmlFor='title'>Message:</label>\r\n                        <input required type='text' name='message' value={message} \r\n                            onChange={(event) => setMessage(event.target.value)}/>\r\n                        <button type='submit'>Submit</button>\r\n                    </form>\r\n                </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostDetail; ","import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Link, useParams, useHistory } from 'react-router-dom';\r\n// import {origionalPostDetail} from './PostDetail';\r\n\r\nconst EditPost = ({token, setPostResults, postResults}) => {\r\n\r\n    const {id} = useParams()\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const history = useHistory();\r\n    \r\n    const setTemplate = () => {\r\n\r\n        const individualPost = postResults.posts.filter(\r\n            (post) => post._id === id\r\n        );\r\n\r\n        setTitle(individualPost[0].title);\r\n        setDescription(individualPost[0].description);\r\n        setPrice(individualPost[0].price);\r\n        setLocation(individualPost[0].location);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTemplate();\r\n    }, []);\r\n\r\n    async function fetchPosts() {\r\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/posts');\r\n        const info = await response.json();\r\n        setPostResults(info.data);\r\n    }\r\n\r\n    const handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n        setError(\"\");\r\n\r\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/posts/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n                post: {\r\n                    title,\r\n                    description,\r\n                    price,\r\n                    location\r\n                }\r\n            })\r\n        });\r\n        const info = await response.json();\r\n\r\n        if(info.error) {\r\n            return setError(info.error.message);\r\n        }\r\n\r\n        fetchPosts();\r\n        \r\n        history.push(`/PostDetail/${id}`);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id='addPost-container'>\r\n            <div id='addPost-title'>\r\n                <h2>Please Edit the Information Below and Submit:</h2>\r\n            </div>\r\n            <form className=\"addPost-form\" onSubmit={handleSubmit}>\r\n              <label htmlFor='title'>Title:</label>\r\n              <input required type='text' name='title' value={title} \r\n                onChange={(event) => setTitle(event.target.value)}/>\r\n              <label htmlFor='description'>Description:</label>\r\n              <input required type='description' name='description' value={description} \r\n                onChange={(event) => setDescription(event.target.value)}/>\r\n              <label htmlFor='price'>Price:</label>\r\n              <input required type='price' name='price' value={price} \r\n                onChange={(event) => setPrice(event.target.value)}/>\r\n              <label htmlFor='location'>Location:</label>\r\n              <input required type='location' name='location' value={location} \r\n                onChange={(event) => setLocation(event.target.value)}/>\r\n              <button type='submit'>Submit</button>\r\n            </form>\r\n            <p>{error}</p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default EditPost;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport Posts from './Posts'\r\nimport Login from './Login'\r\nimport Navbar from './Navbar';\r\nimport Register from './Register';\r\nimport Home from './Home';\r\nimport Account from './Account';\r\nimport AddPost from './AddPost';\r\nimport PostDetail from './PostDetail';\r\nimport EditPost from './EditPost';\r\n\r\nconst App = () => {\r\n    const [postResults, setPostResults] = useState([]);\r\n    const [token, setToken] = useState(\"\");\r\n    const [user, setUser] = useState(null)\r\n\r\n    async function fetchPosts() {\r\n        let headers = {};\r\n        if(token) {\r\n            headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        } else {\r\n            headers = {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/posts', {\r\n            method: \"GET\",\r\n            headers\r\n        });\r\n        const info = await response.json();\r\n        setPostResults(info.data);\r\n    }\r\n\r\n    const fetchUser = async() => {\r\n        const isToken = localStorage.getItem(\"token\");\r\n        if(isToken) {\r\n            setToken(isToken);\r\n        }\r\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT/users/me', {\r\n            headers: {\r\n                Authorization: `Bearer ${isToken}`,\r\n            },\r\n        });\r\n        const info = await response.json();\r\n        \r\n        if(info.success) {\r\n            setUser(info.data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUser();\r\n        fetchPosts();\r\n    }, [token]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar token={token} setToken={setToken} \r\n            setUser={setUser} user={user} />\r\n\r\n            <Route exact path=\"/\">\r\n                <Home user={user}/>\r\n            </Route>\r\n            <Route path=\"/Account\">\r\n                <Account user={user} />\r\n            </Route>\r\n            <Route path=\"/Posts\">\r\n                    <Posts postResults={postResults} token={token} />\r\n            </Route>\r\n            <Route path=\"/Login\">\r\n                <Login token={token} setToken={setToken} />\r\n            </Route>\r\n            <Route path=\"/Register\">\r\n                <Register token={token} setToken={setToken} />\r\n            </Route>\r\n            <Route path=\"/AddPost\">\r\n                <AddPost setPostResults={setPostResults} token={token}/>\r\n            </Route>\r\n            <Route path=\"/PostDetail/:id\">\r\n                <PostDetail user={user} token={token} postResults={postResults} setPostResults={setPostResults} />\r\n            </Route>\r\n            <Route path=\"/EditPost/:id\">\r\n                <EditPost postResults={postResults} setPostResults={setPostResults} token={token}/>\r\n            </Route>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport App from './components/App';\r\n\r\nconst app = document.getElementById('app')\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, app)"],"sourceRoot":""}